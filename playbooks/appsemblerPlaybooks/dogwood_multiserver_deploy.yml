---

# Example sandbox configuration
# for single server community
# installs

- name: Configure mongo
  hosts: "mongo-server"
  sudo: True
  gather_facts: True
  vars:
    BACKUPS_MONGO: yes
    BACKUPS_MYSQL: no
  roles:
  - { role: swapfile, SWAPFILE_SIZE: "2GB" }
  - mongo
  - backups

- name: Configure mysql
  hosts: "mysql-server"
  sudo: True
  gather_facts: True
  vars:
    BACKUPS_MONGO: no
    BACKUPS_MYSQL: yes
  vars_files:
  - roles/edxapp/defaults/main.yml
  - roles/xqueue/defaults/main.yml
  - roles/analytics_api/defaults/main.yml
  - roles/edx_notes_api/defaults/main.yml
  roles:
  - { role: swapfile, SWAPFILE_SIZE: "2GB" }
  - mysql
  - mysql_init
  - backups

- name: Configure instance(s)
  hosts: "edxapp-server"
  sudo: True
  gather_facts: True
  vars:
    migrate_db: "yes"
    openid_workaround: True
    # Set to false if deployed behind another proxy/load balancer.
    #NGINX_SET_X_FORWARDED_HEADERS: True
    # These should stay false for the public AMI
    COMMON_ENABLE_DATADOG: False
    #COMMON_ENABLE_SPLUNKFORWARDER: False
  roles:
    - { role: swapfile, SWAPFILE_SIZE: "2GB" }
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - forum
      - xqueue
      nginx_default_sites:
      - lms
    - { role: 'edxapp', celery_worker: True }
    - edxapp
    - notifier
    - analytics_api
    - edx_notes_api
    - role: demo
      when: INSTALL_DEMO_DATA
      tags: ['demo_role']    
    - oauth_client_setup
    - { role: 'rabbitmq', rabbitmq_ip: '127.0.0.1' }
    - oraclejdk
    - role: elasticsearch
      when: "'localhost' in EDXAPP_ELASTIC_SEARCH_CONFIG|map(attribute='host')"
    - forum
    - { role: "xqueue", update_users: True }
    - edx_ansible
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC
    - { role: backups, BACKUPS_MONGO: True, BACKUPS_MYSQL: True, when: COMMON_ENABLE_BACKUPS }    

- include: monitoring.yml

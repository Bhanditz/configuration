---

# Example sandbox configuration
# for single server community
# installs

- name: Configure mongo
  hosts: "mongo-server"
  sudo: True
  gather_facts: True
  vars:
    BACKUPS_MONGO: yes
    BACKUPS_MYSQL: no
  roles:
  - mongo
  - backups

- name: Configure mysql
  hosts: "mysql-server"
  sudo: True
  gather_facts: True
  vars:
    BACKUPS_MONGO: no
    BACKUPS_MYSQL: yes
  vars_files:
  - roles/edxapp/defaults/main.yml
  - roles/xqueue/defaults/main.yml
  - roles/ora/defaults/main.yml
  - roles/analytics_api/defaults/main.yml
  roles:
  - edxlocal
  - backups

- name: Configure instance(s)
  hosts: "edxapp-server"
  sudo: True
  gather_facts: True
  vars:
    migrate_db: "yes"
    openid_workaround: True
    #EDXAPP_LMS_NGINX_PORT: '80'
    #edx_platform_version: 'master'
    # Set to false if deployed behind another proxy/load balancer.
    #NGINX_SET_X_FORWARDED_HEADERS: True
    # These should stay false for the public AMI
    #COMMON_ENABLE_DATADOG: False
    #COMMON_ENABLE_SPLUNKFORWARDER: False
  pre_tasks:
    # This is dirty, but better than setting in every server vars file
    - set_fact:
        EDXAPP_MONGO_SSL_CLIENT_CERT_PATH: "/edx/etc/edxapp/mongodb.pem"
        EDXAPP_MONGO_SSL_CA_CERT_PATH: "/edx/etc/edxapp/ca.pem"
      when: EDXAPP_MONGO_USE_SSL is defined and EDXAPP_MONGO_USE_SSL
      tags: always
  roles:
    - role: scorm
      when: "{{ EDXAPP_XBLOCK_SETTINGS }}.get('ScormXBlock', False)"
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - forum
      - ora
      - xqueue
      nginx_default_sites:
      - lms
#- edxlocal
#- mongo
    - { role: 'edxapp', celery_worker: True }
    - edxapp
    - demo
    - { role: 'rabbitmq', rabbitmq_ip: '127.0.0.1' }
    - oraclejdk
    - elasticsearch
    - forum
    - { role: "xqueue", update_users: True }
    - ora
    - certs
    - edx_ansible
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC


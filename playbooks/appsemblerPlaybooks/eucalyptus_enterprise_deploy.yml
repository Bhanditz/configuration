---

# Appsembler pro tier deployment
# Docs: https://github.com/appsembler/openedx-docs/blob/master/openedx/pro_tier_deployment.md

# - name: Install Mongo Replica Set
#   hosts: "mongo-servers"
#   sudo: True
#   gather_facts: True
#   vars:
#     BACKUPS_MONGO: no
#     BACKUPS_MYSQL: no
#   roles:
#     - { role: swapfile, SWAPFILE_SIZE: "2GB" }
#     - mongo_3_0

# - name: Install Mongo Replica Set Secondary
#   hosts: "mongo-server-1"
#   sudo: True
#   gather_facts: True
#   vars:
#     BACKUPS_MONGO: no
#     BACKUPS_MYSQL: no
#   roles:
#     - { role: swapfile, SWAPFILE_SIZE: "2GB" }
#     - mongo




- name: Install Services Server
  hosts: "services-server"
  sudo: True
  gather_facts: True
  roles:
    - { role: swapfile, SWAPFILE_SIZE: "4GB" }
    - oraclejdk
    - elasticsearch
    - memcached

- name: Configure stateless edxapp server
  hosts: "edxapp-servers"
  sudo: True
  gather_facts: True
  vars:
    migrate_db: "yes"
    openid_workaround: True
  roles:
    - { role: swapfile, SWAPFILE_SIZE: "4GB" }
    - mysql_init
    # - role: scorm
    #   when: "{{ EDXAPP_XBLOCK_SETTINGS }}.get('ScormXBlock', False)"
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - forum
      nginx_default_sites:
      - lms
    - { role: 'edxapp', celery_worker: True }
    - edxapp
    - edx_notes_api
    - demo
    - oauth_client_setup
    - forum
    - edx_ansible
    # scorm if desired.  requires more setup in server-vars
    # see https://github.com/appsembler/ssla-scorm-player/blob/nyif/master/README.md

- name: Install xqueue, notifier and rabbitmq on services
  hosts: "services-server"
  sudo: True
  gather_facts: True
  vars:
    migrate_db: "yes"
  roles:
    - edxapp_common
    - mysql_init
    - role: nginx
      nginx_sites:
      - xqueue
    - { role: 'rabbitmq', rabbitmq_ip: '0.0.0.0' }
    - notifier
    - { role: notifier, NOTIFIER_DIGEST_TASK_INTERVAL: "5" }
    - { role: "xqueue", update_users: True }

# must come after xqueue running
- name: Install certs
  hosts: "edxapp-servers"
  sudo: True
  gather_facts: True
  vars:
    migrate_db: "yes"
  roles:
    - certs
    - role: nginx
      nginx_sites:
      - certs

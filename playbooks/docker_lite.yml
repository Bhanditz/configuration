---

# Example sandbox configuration
# for single server community
# installs

- name: Configure instance(s)
  hosts: all
  sudo: True
  gather_facts: True
  vars:
    migrate_db: "yes"
    openid_workaround: True
    EDXAPP_LMS_NGINX_PORT: '80'
    # Set to false if deployed behind another proxy/load balancer.
    NGINX_SET_X_FORWARDED_HEADERS: True
    # These should stay false for the public AMI
    COMMON_ENABLE_DATADOG: False
    COMMON_ENABLE_SPLUNKFORWARDER: False
    #birch changes
    EDXAPP_PYTHON_SANDBOX: false
    EDXAPP_SANDBOX_ENFORCE: false
    EDXAPP_LMS_ENV: 'lms.envs.docker'
    EDXAPP_CMS_ENV: 'cms.envs.docker'
    APP_WORKERS:
      lms: 4
      cms: 2
    worker_core_mult:
      lms: 1
      cms: 1
  roles:
    - common
    - vhost
    - edx_ansible
    - user
    - { role: 'docker', version: 'lite', tags: 'runit' }
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - lms-preview
      - forum
      nginx_default_sites:
      - lms
    - mysql
    - edxlocal
    - oraclejdk
    - elasticsearch
    - mongo
    - { role: 'rabbitmq', rabbitmq_ip: '127.0.0.1'  }
    - edxapp
    - { role: 'edxapp', celery_worker: True  }
    - forum
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC
    # run the docker scripts again to relink init.d scripts to runit
    - { role: 'docker', version: 'lite', tags: 'runit' }


---

    
- name: Install base system packages on which Badgr relies
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ badgr_debian_pkgs }}"
  tags: badgr_app

- name: Install devel packages for Badgr
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ badgr_debian_devel_pkgs }}"
  when: BADGR_DEVELOPER_OPTIONS
  tags: badgr_app

- name: Create Badgr application user
  user:
    name: "{{ badgr_user }}"
    home: "{{ badgr_app_dir }}"
    createhome: no
    shell: /bin/false
  tags: badgr_app

- name: Create Badgr app and venv dir
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ badgr_user }}"
    group: "{{ common_web_group }}"
  with_items:
    - "{{ badgr_app_dir }}"
    - "{{ badgr_venvs }}"
  tags: badgr_app

- name: Install Badgr server
  git: repo={{ badgr_source_repo }} version={{ badgr_version }} dest={{ badgr_code_dir }} accept_hostkey=yes
  become_user: "{{ badgr_user }}"

- name: Install standard Badgr requirements
  pip:
    requirements: "{{ badgr_code_dir }}/requirements.txt"
    virtualenv: "{{ badgr_venv }}"
    state: present
  become_user: "{{ badgr_user }}"    
  tags: badgr_app

- name: Install Badgr development requirements
  pip:
    requirements: "{{ badgr_code_dir }}/requirements-dev.txt"
    virtualenv: "{{ badgr_venv }}"
    state: present
  become_user: "{{ badgr_user }}"    
  when: BADGR_DEVELOPER_OPTIONS
  tags: badgr_app

- name: install nodenv
  pip:
    name: "nodeenv"
    version: "1.1.1"
    # NOTE (CCB): Using the "virtualenv" option here doesn't seem to work.
    executable: "{{ badgr_venv }}/bin/pip"
  become_user: "{{ badgr_user }}"
  tags: badgr_app

- name: create Badgr nodeenv
  shell: "{{ badgr_venv }}/bin/nodeenv {{ badgr_nodeenv_dir }} --node={{ badgr_node_version }} --prebuilt --force"
  become_user: "{{ badgr_user }}"
  tags: badgr_app

# Set the npm registry
# This needs to be done as root since npm is weird about
# chown - https://github.com/npm/npm/issues/3565
- name: Set the Badgr npm registry
  shell: "npm config set registry '{{ COMMON_NPM_MIRROR_URL }}'"
  args:
    creates: "{{ badgr_app_dir }}/.npmrc"
  become_user: "{{ badgr_user }}"    
  tags: badgr_app
  environment: "{{ badgr_environment }}"

# Set the npm registry permissions
- name: Set the Badgr npm registry permissions
  file:
    path: "{{ badgr_app_dir }}/.npmrc"
    owner: "{{ badgr_user }}"
    group: "{{ badgr_user }}"
  tags: badgr_app

- name: install grunt-cli for Badgr
  npm:
    name: grunt-cli
    executable: "{{ badgr_nodeenv_bin }}/npm"
    path: "{{ badgr_code_dir }}"
    state: latest
  environment: "{{ badgr_environment }}"
  become_user: "{{ badgr_user }}"
  tags: badgr_app

- name: install Badgr node dependencies
  npm:
    executable: "{{ badgr_nodeenv_bin }}/npm"
    path: "{{ badgr_code_dir }}"
    production: "{{ BADGR_DEVELOPER_OPTIONS and 'no' or 'yes'}}"
    state: latest
  environment: "{{ badgr_environment }}"
  become_user: "{{ badgr_user }}"
  tags: badgr_app

- name: create Badgr env bash script
  template:
    src: "badgr_env.j2"
    dest: "{{ badgr_app_dir }}/badgr_env"
    owner: "{{ badgr_user }}"
    group: "{{ common_web_user }}"
    mode: "0644"
  
- name: create helper scripts for managing badgr
  template:
    src: "badgr-migrate.j2"
    dest: "{{ COMMON_BIN_DIR }}/badgr-migrate"
    owner: "{{ badgr_user }}"
    mode: 0755
  tags: badgr_app

- name: run Badgr migration
  shell: "{{COMMON_BIN_DIR}}/badgr-migrate"
  become_user: "{{ badgr_user }}"
  when: "{{ BADGR_RUN_MIGRATIONS | default(True)}}" 

# - name: create Badgr app admin user
#   shell: "{COMMON_BIN_DIR}/badgr-superuser"
#   when: "{{ BADGR_MAKE_SUPERUSER | default(True) }}"   

# - name: run Grunt dist


